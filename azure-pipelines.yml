trigger:
  tags:
    include:
    - v*

variables:
  dockerRegistryServiceConnection: 'DockerConnectionService'
  dockerHubNamespace: 'FluffyWork'
  backendImageName: 'todo-backend'
  frontendImageName: 'todo-frontend'

pool:
  name: MyLocalAgents

stages:
- stage: Build
  displayName: 'Test, Version and Build'
  jobs:
  - job: TestAndBuild
    displayName: 'Test, Version, Build and Push'
    steps:

    - checkout: self
      fetchDepth: '0'

    - task: DotNetCoreCLI@2
      displayName: 'Run and Publish Backend Tests'
      inputs:
        command: 'test'
        projects: '**/*.sln'
        publishTestResults: true

    - task: Npm@1
      displayName: 'Install Frontend Dependencies'
      inputs:
        command: 'install'
        workingDir: 'frontend'

    - task: Npm@1
      displayName: 'Run Frontend Tests'
      inputs:
        command: 'custom'
        workingDir: 'frontend'
        customCommand: 'test -- --watchAll=false --reporters=default --reporters=jest-junit'
    
    - task: PublishTestResults@2
      displayName: 'Publish Frontend Test Results'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'frontend/reports/jest-junit.xml'
        mergeTestResults: true
        failTaskOnFailedTests: true

    - task: DotNetCoreCLI@2
      displayName: 'Install GitVersion Tool'
      inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'install --global GitVersion.Tool'

    - task: PowerShell@2
      name: 'RunGitVersion'
      displayName: 'Calculate Application Version'
      inputs:
        targetType: 'inline'
        script: |
          $gitversionOutput = dotnet-gitversion /nofetch | ConvertFrom-Json
          $semVer = $gitversionOutput.SemVer
          Write-Host "GitVersion calculated SemVer: $semVer"
          Write-Host "##vso[task.setvariable variable=GitVersion.SemVer;isOutput=true]$semVer"

    - task: Docker@2
      displayName: 'Build and Push Backend'
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: '$(dockerHubNamespace)/$(backendImageName)'
        command: 'buildAndPush'
        Dockerfile: '**/Backend/Dockerfile'
        buildContext: '$(Build.Repository.LocalPath)'
        tags: |
          $(RunGitVersion.GitVersion.SemVer)
          latest

    - task: Docker@2
      displayName: 'Build and Push Frontend'
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: '$(dockerHubNamespace)/$(frontendImageName)'
        command: 'buildAndPush'
        Dockerfile: '**/frontend/Dockerfile'
        tags: |
          $(RunGitVersion.GitVersion.SemVer)
          latest